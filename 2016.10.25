1.规定范围取随机整数
    function randomInt(min,max){
        return Math.floor(Math.random()*(max-min+1))+min;
    };
    
2.随机获取数组中的值
    function randomArr(arr){
        return arr[Math.floor(Math.random()*arr.length)];
    };
    
3.生成从0到指定值的数字数组
    var arr=[];length=10;i=3;
    for(;arr.push(i++)<length;){};
    console.log(arr);
    
4.打乱数组内元素的顺序
    arr.sort(function(){
        return Math.random()-0.5;
    });

5.对象转换为数组
    //obj必须为以下形式；获取的DOM集合，以及函数的arguments也可以通过此方式转化为数组
    var obj={
        0:'a',
	    1:'b',
	    2:'c',
	    length:3
    };
    var _slice=[].slice;
    var newarr=_slice.call(obj);
    
6.判断对象类型
    Object.prototype.toString.call();
    
7.获取数组中最大和最小值(多维数组也能用)
    function mn(arr){
        return{
            max:Math.max.apply(null,arr.join(',').split('')),
            min:Math.min.apply(null,arr.join(',').split(''))
        }
    }
    
8.清空数组
    ①arr.length=0;
    ②arr.splice(0,arr.length);
    ③arr=[];
    
9.保留指定小数位
    var num =3.14159;
    num = num.toFixed(3);  //3.142  第3位小数位以四舍五入计算
    
10.删除数组中的元素(不要用delete，仅仅是让元素的值变为undefined)
    arr.splice(index,删除数量);
    
11.生成指定长度的随机字母数字字符串
    function randomStr(len){
        var str='';
        for(;str.length<len;str+=Math.random().toString(36).substr(2));
        return str.substr(0,len);
    };
   
12.排除null和undefined
    function test(obj){
        if(obj!=null){// obj除了undefined 和 null 之外都会走这里}
    }

13.找出数组中出现次数最的元素，并给出其出现过的位置
    function getMaxAndIndex( arr ){
        var obj = {};
        arr.forEach(function(item,index){
            if(!obj[item]){
                obj[item]= {indexs: [index]}
            }else{
                obj[item]['indexs'].push(index);
            }
        });
        var num=0;//记录出现次数最大值
        var str='';//记录出现次数最多的字符
        var reArr;//返回最大值的位置数组
        for(var attr in obj){
            var temp=obj[attr]['indexs'];
            if(temp.length>num){
                num=temp.length;
                str=attr;
                reArr=temp;
            }
        }
        return {
            maxStr:str,
            indexs:reArr
        }
    }
