一.
function Foo() {
    getName = function () { 
        console.log('1');
    };
    return this;
}
Foo.getName = function () {
    console.log('2');
};
Foo.prototype.getName = function () { 
    console.log('3');
};
var getName = function () { 
    console.log('4');
};
function getName() { 
    console.log(5);
}

Foo.getName();  
getName();    
Foo().getName(); 
getName();  
new Foo.getName(); 
new Foo().getName();   
new new Foo().getName();    

answer:2 4 1 1 2 3 3

二.
const tasks = []; // 这里存放异步操作的 Promise 
const output = (i) => new Promise((resolve) => { 
    setTimeout(() => { 
        console.log(new Date, i); 
        resolve(); 
    }, 1000 * i); 
}); 
 
// 生成全部的异步操作 
for (var i = 0; i < 5; i++) { 
    tasks.push(output(i)); 
} 
 
// 异步操作完成之后，输出最后的 i 
Promise.all(tasks).then(() => { 
    setTimeout(() => { 
        console.log(new Date, i); 
    }, 1000); 
});
